
#LEER FUENTE DE DATOS
input {
	file {
		path => "C:/Users/Ever/Downloads/books_data.csv" #ubicacion de los archivos csv
		sincedb_path => "NUL"
    	start_position => "beginning"
		codec => plain { charset=>"Windows-1252" }
	}
}

# MANIPULAR Y TRANSFORMAR DATOS
filter {

	# cabeceras del archivo csv (variables)
	csv {
		columns => [
			"Title",
			"description",
			"authors",
			"image",
			"previewLink",
			"publisher",
			"publishedDate",
			"infoLink",
			"categories",
			"ratingsCount"
		]
		separator => ","
		skip_header => true
	}

	# capturar fecha de publicacion y formatear YYYY
	if [publishedDate] != 'null' or  [publishedDate] != ''{
		mutate {
			gsub => ["publishedDate", "-\S+", ""]
		}
	}

	# capturar fecha de publicacion nulos y colocar una fecha valida fuera de rango
	if [publishedDate] == '' or [publishedDate] != 'null'{
		mutate {
			replace => {"publishedDate" => "3000"}
		}
	}

    mutate {
		# agrupar columnas para posterior manipulaciÃ³n con translate
		add_field => { "join" => "%{description};%{authors};%{publisher};%{publishedDate};%{categories}"} 

	}

	# remover campos no deseados
	mutate {
		remove_field => [
            "@version",
            "log",
            "event",
            "host",
            "message",
            "@timestamp",
			"image",
			"previewLink",
			"infoLink",
			"ratingsCount",
			"description",
			"authors",
			"publisher",
			"publishedDate",
			"categories"
		]
	}

	
}

# INGESTAR DATOS
output {
	# elasticsearch {
	# 	hosts => ["https://kibana-test.es.southamerica-east1.gcp.elastic-cloud.com:9243"]
	# 	user => "elastic"
    # 	password => "aqPJa585l5ajuoBeoAPF47tf" 
	# 	index => "sfp_nomina"
	# 	codec => plain { charset=>"Windows-1252" }
	# }

	csv{
		fields => ["Title", "join"]
		codec => line { format => "%{Title},%{join}"}
    	path => "C:/Users/Ever/BigData/amazon_books/books_data.csv"

	}

    #para imprimir en consola
  	#stdout { }
  	#stdout { codec => rubydebug }


}